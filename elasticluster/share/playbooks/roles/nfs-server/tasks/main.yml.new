---
#
# Install an NFSv4 server
#

- name: Load distribution-specific parameters
  include_tasks: 'init-{{ansible_os_family}}.yml'
  tags:
    - nfs
    - nfs-server

- name: install NFS server software
  tags:
    - nfs
    - nfs-server
  package:
    pkg: '{{nfs_server_packages}}'
    state: '{{ pkg_install_state }}'

- name: Ensure export directories exist
  tags:
    - nfs
    - nfs-server
  file:
    path: "{{item.path}}"
    state: directory
  loop: '{{NFS_EXPORTS}}'

- name: Export directories
  tags:
    - nfs
    - nfs-server
  lineinfile:
    dest: '/etc/exports'
    create: yes
    backup: yes
    line: '{{item.path}} {% for client in item.clients %}{{client}}({{item.options|default("async,rw,no_root_squash,no_subtree_check,crossmnt")}}) {% endfor %}'
    regexp: '^ *{{item.path}} +'
    state: present
  loop: '{{NFS_EXPORTS}}'
  notify: reload exports

- name: Ensure portmapper is running
  tags:
    - nfs
    - nfs-server
  service:
    name: 'rpcbind'
    enabled: yes
    state: 'started'

- name: Ensure NFS server is running
  tags:
    - nfs
    - nfs-server
  systemd:
    name: '{{item}}'
    enabled: yes
    state: '{{_nfs_server_started_state}}'
  loop: '{{nfs_server_services}}'
  when: 'not is_debian_8'

- name: Configure SELinux for NFS
  tags:
    - nfs
    - nfs-server
  seboolean:
    name: nfs_export_all_rw
    state: yes
    persistent: yes
  when: ansible_selinux.status == "enabled"

- name: Ensure nfsd module is loaded
  tags:
    - nfs
    - nfs-server
  modprobe:
    name: nfsd
    state: present

- name: Configure iptables for NFS
  tags:
    - nfs
    - nfs-server
  iptables:
    chain: INPUT
    protocol: "{{ item.protocol }}"
    destination_port: "{{ item.port }}"
    jump: ACCEPT
    comment: "Allow NFS {{ item.name }}"
  loop:
    - { name: "Portmapper", protocol: tcp, port: "111" }
    - { name: "Portmapper", protocol: udp, port: "111" }
    - { name: "NFS", protocol: tcp, port: "2049" }
    - { name: "NFS", protocol: udp, port: "2049" }
    - { name: "NFSv3 mountd", protocol: tcp, port: "20048" }
    - { name: "NFSv3 mountd", protocol: udp, port: "20048" }
  when: ansible_os_family == "RedHat"

- name: Ensure iptables is running
  tags:
    - nfs
    - nfs-server
  service:
    name: iptables
    state: started
    enabled: yes
  when: ansible_os_family == "RedHat"

- name: Ensure firewalld is stopped and disabled
  tags:
    - nfs
    - nfs-server
  systemd:
    name: firewalld
    state: stopped
    enabled: no
  when: ansible_os_family == "RedHat"

handlers:
  - name: reload exports
    command: exportfs -r
